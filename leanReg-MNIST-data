!pip install tensorflow==2.15.0

import tensorflow as tf

from tensorflow import keras

import numpy as np
import matplotlib.pyplot as plt

print ('Tensor Flow Version: ' , tf.__version__)

((train_data, train_labels), (eval_data, eval_labels)) = tf.keras.datasets.mnist.load_data()

train_data = train_data/np.float32(255)
train_labels = train_labels.astype(np.int32)

eval_data = eval_data/np.float32(255)
eval_labels = eval_labels.astype(np.int32)

feature_columns = [tf.feature_column.numeric_column("x", shape=[28,28])]
print ('feature_columns: ', feature_columns)

classifier = tf.estimator.LinearClassifier(
    feature_columns=feature_columns,
    n_classes=10,
    model_dir="mnist_model/"
)

train_input_fn = tf.compat.v1.estimator.inputs.numpy_input_fn(x={"x": train_data}, y=train_labels, batch_size=100, num_epochs=None, shuffle=True)

classifier.train(input_fn=train_input_fn,steps=10)

val_input_fn = tf.compat.v1.estimator.inputs.numpy_input_fn(x={"x": eval_data}, y=eval_labels, num_epochs=1, shuffle=False)

eval_results = classifier.evaluate(input_fn=val_input_fn)

plt.imshow(eval_data[0], cmap='gray')
plt.title(eval_labels[0])

print (eval_results)

